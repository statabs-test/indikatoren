{
  "series": [
    {
      "color": "#fabd24",
      "legendIndex": 2,
      "data": [
        [
          "2'006",
          "62'984"
        ],
        [
          "2'007",
          "65'318"
        ],
        [
          "2'008",
          "64'910"
        ],
        [
          "2'009",
          "65'107"
        ],
        [
          "2'010",
          "65'751"
        ],
        [
          "2'011",
          "64'818"
        ],
        [
          "2'012",
          "65'189"
        ],
        [
          "2'013",
          "66'943"
        ],
        [
          "2'014",
          "68'538"
        ],
        [
          "2'015",
          "68'248"
        ]
      ],
      "name": "Mittelwert Reineinkommen",
      "turboThreshold": 0
    },
    {
      "color": "#672773",
      "legendIndex": 2,
      "data": [
        [
          "2'006",
          "48'563"
        ],
        [
          "2'007",
          "49'530"
        ],
        [
          "2'008",
          "47'442"
        ],
        [
          "2'009",
          "47'980"
        ],
        [
          "2'010",
          "48'072"
        ],
        [
          "2'011",
          "48'350"
        ],
        [
          "2'012",
          "48'409"
        ],
        [
          "2'013",
          "48'816"
        ],
        [
          "2'014",
          "49'044"
        ],
        [
          "2'015",
          "49'142"
        ]
      ],
      "name": "Median Reineinkommen",
      "turboThreshold": 0
    },
    {
      "color": "#007a2f",
      "legendIndex": 2,
      "data": [
        [
          "2'006",
          "1'023'135'594"
        ],
        [
          "2'007",
          "1'069'643'932"
        ],
        [
          "2'008",
          "1'041'456'578"
        ],
        [
          "2'009",
          "1'058'394'894"
        ],
        [
          "2'010",
          "1'088'317'926"
        ],
        [
          "2'011",
          "1'057'636'852"
        ],
        [
          "2'012",
          "1'065'215'842"
        ],
        [
          "2'013",
          "1'084'939'722"
        ],
        [
          "2'014",
          "1'115'435'105"
        ],
        [
          "2'015",
          "1'115'105'002"
        ]
      ],
      "name": "Ertrag aus Einkommenssteuer (rechte Skala)",
      "turboThreshold": 0
    }
  ],
  "xAxis": {
    "type": "category",
    "uniqueNames": false,
    "lineColor": "#B9CFD7",
    "lineWidth": 0.5,
    "labels": {
      "style": {
        "color": "#000000",
        "textOverflow": "none"
      },
      "step": 1,
      "rotation": 0
    },
    "tickLength": 0,
    "endOnTick": false,
    "tickInterval": 5
  },
  "chart": {
    "events": {
      "load": function () {
              this.credits.element.onclick = function() {};
              
              //for top-left legends with no x defined: move legend to x position of first yAxis
              if (this['legend']['options']['align'] == 'left' && this['legend']['options']['verticalAlign'] == 'top' && this['legend']['options']['x'] == 0){
                this.update(
                  {
                    legend: {
                      x: this.yAxis[0].left - this.spacingBox.x - this.legend.padding
                    }
                  }
                );
              }              
          }
    },
    "borderColor": "#fbfbfb",
    "backgroundColor": "#fbfbfb",
    "zoomType": "xy",
    "width": 485,
    "height": 415,
    "spacingBottom": 45,
    "style": {
      "fontFamily": "Arial"
    },
    "type": "line",
    "renderTo": "container-6900"
  },
  "title": {
    "style": {
      "fontSize": "14px",
      "fontWeight": "bold",
      "color": "#000000"
    },
    "align": "left",
    "text": "Mittelwert und Median des Reineinkommens, Summe des Ertrags aus Einkommenssteuer"
  },
  "subtitle": {
    "style": {
      "fontSize": "12px",
      "fontWeight": "normal",
      "fontFamily": "Arial",
      "color": "#000000"
    },
    "text": "n Franken, Basel-Stadt",
    "align": "left"
  },
  "tooltip": {
    "shared": false,
    "headerFormat": "\u003Cspan style=\"font-size: 10px\"\u003E Alter: {point.key}\u003C\u002Fspan\u003E\u003Cbr\u002F\u003E",
    "pointFormat": "\u003Cspan style=\"color:{series.color}\"\u003E●\u003C\u002Fspan\u003E {series.name}: \u003Cb\u003E{point.y}\u003C\u002Fb\u003E%\u003Cbr\u002F\u003E"
  },
  "yAxis": {
    "min": 0,
    "gridLineColor": "#B9CFD7",
    "gridLineWidth": 0.5,
    "title": {
      "style": {
        "color": "#000000",
        "fontSize": null
      },
      "text": null
    },
    "labels": {
      "style": {
        "color": "#000000"
      },
      "format": "{value}%"
    },
    "max": 60
  },
  "credits": {
    "href": "http:\u002F\u002Fwww.statistik.bs.ch",
    "enabled": true,
    "style": {
      "color": "#000000",
      "fontSize": "10px",
      "cursor": "default"
    },
    "position": {
      "align": "left",
      "verticalAlign": "bottom",
      "x": 10,
      "y": -15
    },
    "text": "Quelle: Steuerstatistik Basel-Stadt"
  },
  "legend": {
    "enabled": true,
    "layout": "horizontal",
    "verticalAlign": "top",
    "align": "left",
    "symbolRadius": 0,
    "itemWidth": 100,
    "itemMarginBottom": 5,
    "itemStyle": {
      "fontWeight": "normal"
    }
  },
  "customFunctions": {
    "optimalAxisLabelDecimals": function (axis, formatString){
          
          //see https://forum.highcharts.com/highcharts-usage/how-to-have-all-yaxis-labels-show-same-number-of-decimals-t40826/ 
        	//function checks how many decimal places has a number
          var countDecimals = function(value) {
            if ((value % 1) != 0)
              return value.toString().split(".")[1].length;
            return 0;
          };
          
          var ticks = axis.tickPositions;
          var howManyDecimals = 0;
					
          //loop looks for the the largest number of decimal places
          ticks.forEach(function(tick) {
            if (countDecimals(tick) > howManyDecimals) {
              howManyDecimals = countDecimals(tick);
            }
          });
					
					
          //update labels so they have the same number of decimal places
          axis.chart.update({
            yAxis: [{
              labels: {
                //format: '{value:,.' + howManyDecimals + 'f}',
                format: formatString.replace('howManyDecimals', howManyDecimals),
              }
            }, {
            	//second yAxis, if present
            }]
          }, true, true);
    }
  },
  "plotOptions": {
    "line": {
      "marker": {
        "enabled": false,
        "symbol": "circle"
      }
    }
  },
  "exporting": {
    "filename": 6900
  }
}
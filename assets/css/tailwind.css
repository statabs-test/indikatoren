.toggle-switch {
  position: relative;
  display: flex;
  cursor: pointer;
  align-items: center;
  gap: 5px;
}
  .toggle-switch:before {
    position: relative;
  }
  .toggle-switch:before {
    display: block;
  }
  .toggle-switch:before {
    height: 20px;
  }
  .toggle-switch:before {
    width: 36px;
  }
  .toggle-switch:before {
    border-radius: 10px;
  }
  .toggle-switch:before {
    border-width: 1px;
  }
  .toggle-switch:before {
    --tw-border-opacity: 1;
    border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  }
  .toggle-switch:before {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  }
  .toggle-switch:before {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  .toggle-switch:before {
    transition-duration: 250ms;
  }
  .toggle-switch:before {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  .toggle-switch:before {
    --tw-content: '';
    content: var(--tw-content);
  }
  .toggle-switch:after {
    position: absolute;
  }
  .toggle-switch:after {
    left: 3px;
  }
  .toggle-switch:after {
    display: block;
  }
  .toggle-switch:after {
    height: 14px;
  }
  .toggle-switch:after {
    width: 14px;
  }
  .toggle-switch:after {
    border-radius: 9999px;
  }
  .toggle-switch:after {
    --tw-bg-opacity: 1;
    background-color: rgb(30 69 87 / var(--tw-bg-opacity, 1));
  }
  .toggle-switch:after {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  .toggle-switch:after {
    transition-duration: 250ms;
  }
  .toggle-switch:after {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  .toggle-switch:after {
    --tw-content: '';
    content: var(--tw-content);
  }
  .toggle-switch:hover:before {
      --tw-border-opacity: 1;
      border-color: rgb(7 155 202 / var(--tw-border-opacity, 1));
    }
  .toggle-switch:hover:after {
      --tw-bg-opacity: 1;
      background-color: rgb(7 155 202 / var(--tw-bg-opacity, 1));
    }
  .toggle-switch.is-on-dark {
    color: #ffffff;
  }
  .toggle-switch.is-on-dark:before {
      --tw-border-opacity: 1;
      border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
    }
  .toggle-switch.is-on-dark:before {
      --tw-bg-opacity: 1;
      background-color: rgb(30 69 87 / var(--tw-bg-opacity, 1));
    }
  .toggle-switch.is-on-dark:after {
      --tw-bg-opacity: 1;
      background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
    }
  .toggle-switch.is-on-dark:hover:before {
        --tw-border-opacity: 1;
        border-color: rgb(133 212 238 / var(--tw-border-opacity, 1));
      }
  .toggle-switch.is-on-dark:hover:after {
        --tw-bg-opacity: 1;
        background-color: rgb(133 212 238 / var(--tw-bg-opacity, 1));
      }

input[role="switch"]:focus + .toggle-switch:before {
      --tw-border-opacity: 1;
      border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
    }

input[role="switch"]:focus + .toggle-switch:before {
      --tw-shadow: 0 0 10px 0 #9156B4;
      --tw-shadow-colored: 0 0 10px 0 var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    }

input[role="switch"]:focus + .toggle-switch:before {
      --tw-shadow-color: #9156B4;
      --tw-shadow: var(--tw-shadow-colored);
    }

input[role="switch"]:focus + .toggle-switch.is-on-dark:before {
      --tw-border-opacity: 1;
      border-color: rgb(193 150 220 / var(--tw-border-opacity, 1));
    }

input[role="switch"]:focus + .toggle-switch.is-on-dark:before {
      --tw-shadow: 0 0 10px 0 #C196DC;
      --tw-shadow-colored: 0 0 10px 0 var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    }

input[role="switch"]:disabled + .toggle-switch {
    cursor: default;
  }

input[role="switch"]:disabled + .toggle-switch:before,
    input[role="switch"]:disabled + .toggle-switch:hover:before {
      --tw-border-opacity: 1;
      border-color: rgb(148 148 148 / var(--tw-border-opacity, 1));
    }

input[role="switch"]:disabled + .toggle-switch:after,
    input[role="switch"]:disabled + .toggle-switch:hover:after {
      --tw-bg-opacity: 1;
      background-color: rgb(148 148 148 / var(--tw-bg-opacity, 1));
    }

input[role="switch"]:disabled + .toggle-switch.is-on-dark {
      color: #BABABA;
    }

input[role="switch"]:disabled + .toggle-switch.is-on-dark:before,
      input[role="switch"]:disabled + .toggle-switch.is-on-dark:hover:before {
        --tw-border-opacity: 1;
        border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
      }

input[role="switch"]:disabled + .toggle-switch.is-on-dark:before,
      input[role="switch"]:disabled + .toggle-switch.is-on-dark:hover:before {
        background-color: transparent;
      }

input[role="switch"]:disabled + .toggle-switch.is-on-dark:after,
      input[role="switch"]:disabled + .toggle-switch.is-on-dark:hover:after {
        --tw-border-opacity: 1;
        border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
      }

input[role="switch"]:checked + .toggle-switch:before {
      --tw-bg-opacity: 1;
      background-color: rgb(30 69 87 / var(--tw-bg-opacity, 1));
    }

input[role="switch"]:checked + .toggle-switch:after {
      left: 19px;
    }

input[role="switch"]:checked + .toggle-switch:after {
      --tw-bg-opacity: 1;
      background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
    }

input[role="switch"]:checked + .toggle-switch:hover:before {
        --tw-border-opacity: 1;
        border-color: rgb(133 212 238 / var(--tw-border-opacity, 1));
      }

input[role="switch"]:checked + .toggle-switch:hover:after {
        --tw-bg-opacity: 1;
        background-color: rgb(133 212 238 / var(--tw-bg-opacity, 1));
      }

input[role="switch"]:checked + .toggle-switch.is-on-dark:before {
        --tw-border-opacity: 1;
        border-color: rgb(255 255 255 / var(--tw-border-opacity, 1));
      }

input[role="switch"]:checked + .toggle-switch.is-on-dark:before {
        --tw-bg-opacity: 1;
        background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
      }

input[role="switch"]:checked + .toggle-switch.is-on-dark:after {
        --tw-bg-opacity: 1;
        background-color: rgb(30 69 87 / var(--tw-bg-opacity, 1));
      }

input[role="switch"]:checked + .toggle-switch.is-on-dark:hover:before {
          --tw-border-opacity: 1;
          border-color: rgb(81 185 218 / var(--tw-border-opacity, 1));
        }

input[role="switch"]:checked + .toggle-switch.is-on-dark:hover:after {
          --tw-bg-opacity: 1;
          background-color: rgb(81 185 218 / var(--tw-bg-opacity, 1));
        }

.text-toggle-switch {
  display: inline-flex;
  border-radius: 9999px;
  border-width: 1px;
  color: #1E4557;
}

.text-toggle-switch:hover {
  --tw-border-opacity: 1;
  border-color: rgb(7 155 202 / var(--tw-border-opacity, 1));
}

.text-toggle-switch {
  height: 2.4em;
  padding: 0.2em;
}

.text-toggle-switch-inner {
  position: relative;
  display: flex;
  overflow: hidden;
  border-radius: inherit;
}

.text-toggle-switch-inner a {
    position: relative;
  }

.text-toggle-switch-inner a {
    display: flex;
  }

.text-toggle-switch-inner a {
    height: 100%;
  }

.text-toggle-switch-inner a {
    align-items: center;
  }

.text-toggle-switch-inner a {
    border-radius: inherit;
  }

.text-toggle-switch-inner a {
    padding-left: 0.85em;
    padding-right: 0.85em;
  }

.text-toggle-switch-inner a {
    font-weight: 700;
  }

.text-toggle-switch-inner a {
    text-decoration-line: none;
  }

.text-toggle-switch-inner a {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }

.text-toggle-switch-inner a:focus-visible {
    outline-style: solid;
  }

.text-toggle-switch-inner a:focus-visible {
    outline-width: 3px;
  }

.text-toggle-switch-inner a:focus-visible {
    outline-offset: -3px;
  }

.text-toggle-switch-inner a:focus-visible {
    outline-color: black;
  }

.text-toggle-switch-inner a {
    transition-duration: 500ms;
  }

.text-toggle-switch-inner a svg {
      height: 25px;
    }

.text-toggle-switch-inner a svg {
      width: 25px;
    }

.text-toggle-switch-inner a span {
      position: relative;
    }

.text-toggle-switch-inner a span {
      z-index: 40;
    }

.text-toggle-switch-inner a:before {
      pointer-events: none;
    }

.text-toggle-switch-inner a:before {
      position: absolute;
    }

.text-toggle-switch-inner a:before {
      top: 0px;
    }

.text-toggle-switch-inner a:before {
      left: 0px;
    }

.text-toggle-switch-inner a:before {
      z-index: -2;
    }

.text-toggle-switch-inner a:before {
      display: block;
    }

.text-toggle-switch-inner a:before {
      height: 100%;
    }

.text-toggle-switch-inner a:before {
      width: 100%;
    }

.text-toggle-switch-inner a:before {
      border-radius: inherit;
    }

.text-toggle-switch-inner a:before {
      --tw-bg-opacity: 1;
      background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
    }

.text-toggle-switch-inner a:before {
      --tw-content: '';
      content: var(--tw-content);
    }

.text-toggle-switch-inner a:before {
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }

.text-toggle-switch-inner a:before {
      transition-duration: 500ms;
    }

.text-toggle-switch-inner a:before {
      --tw-translate-x: 240%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }

.text-toggle-switch-inner a:before {
      -webkit-user-select: none;
         -moz-user-select: none;
              user-select: none;
    }

.text-toggle-switch-inner a:not(.is-active):hover span {
      color: #079BCA;
    }

.text-toggle-switch-inner a:not(.is-active):hover svg {
      color: #079BCA;
    }

.text-toggle-switch-inner a.is-active {
      color: #ffffff;
    }

.text-toggle-switch-inner a.is-active:before {
        --tw-translate-x: 0px;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }

.text-toggle-switch-inner a:first-child {
      overflow: hidden;
    }

.text-toggle-switch-inner a:first-child:not(.is-active):before {
        --tw-translate-x: 250%;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }

.text-toggle-switch-inner a:first-child.is-active + a:before {
      --tw-translate-x: -110%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }

:root {
  --page-header-height: 118px;
}

@media (min-width: 768px) {

:root {
    --page-header-height: 58px
}
  }

@media (min-width: 1210px) {

:root {
    --page-header-height: 70px
}
  }

@keyframes rotateBaselStab {
  0% {
    transform: rotate3d(0, 10, 0, 0deg);
  }

  50% {
    transform: rotate3d(0, 10, 0, 180deg);
  }

  100% {
    transform: rotate3d(0, 10, 0, 360deg);
  }
}

.loading-spinner {
  height: 166.994926301px;
  width: 120px;
}

/* Calculated height */

.loading-spinner * {
    transform-origin: center;
  }

.loading-spinner :nth-child(1) {
    animation: 3s infinite rotateBaselStab;
  }

.loading-spinner :nth-child(2) {
    animation: 3s infinite rotateBaselStab;
    animation-delay: 100ms;
  }

.loading-spinner :nth-child(3) {
    animation: 3s infinite rotateBaselStab;
    animation-delay: 200ms;
  }

.loading-spinner :nth-child(4) {
    animation: 3s infinite rotateBaselStab;
    animation-delay: 300ms;
  }

.loading-spinner :nth-child(5) {
    animation: 3s infinite rotateBaselStab;
    animation-delay: 400ms;
  }

@keyframes drop {
  0% {
    opacity: 0;
    top: -3%;
  }

  0.01% {
    opacity: 1;
    top: -3%;
    transform: translateX(var(--left-start)) rotate(var(--rotate-start));
  }

  99.999% {
    top: calc(100% - 10px);
    opacity: 1;
    transform: translateX(var(--left-end)) rotate(var(--rotate-end));
  }

  100% {
    top: calc(100% - 10px);
    opacity: 0;
    transform: translateX(var(--left-end)) rotate(var(--rotate-end));
  }
}

@tailwind components;

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/* ! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Inter, Helvetica Neue, Helvetica, Arial, sans-serif;
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:root {
  --color-primary-50: #F2F7F3;
  --color-primary-100: #DDECDE;
  --color-primary-200: #B8D6BE;
  --color-primary-300: #7BB589;
  --color-primary-400: #469A5D;
  --color-primary-500: #2A9749;
  --color-primary-600: #32834A;
  --color-primary-700: #2A713F;
  --color-primary-800: #245333;
  --color-primary-900: #1F402A;
}

html {
  color: #333333;
}

/* Cypress has a hard time finding elements when smooth scrolling is enabled. */

html:not(.e2e):not(.pb-html-preview) {
    scroll-behavior: smooth;
  }

html {
  ---base-sticky-top: 48px;
}

@media (min-width: 768px) {

html {
    ---base-sticky-top: 0px;
}
  }

html.has-header-visible {
    ---base-sticky-top: var(--page-header-height);
  }

hr {
  color: #E3E3E3;
}

@media (min-width: 768px) {
  .admin-toolbar-container ~ .page > .page-content {
    min-height: calc(100vh - 117px);
  }
}

body {
  max-width: 100vw;
  overflow-x: hidden;
}

.page {
  display: flex;
  flex-direction: column;
  min-height: calc(100vh - var(--page-header-height));
}

/* There are several button types: weak, strong, action, and super. For the sake of simplicity, "weak" is the default. */

/* For each button type (except "action" and "super"), there are two size variations: base and sm. base is the default. */

/* For each button type and each size, there are different states. Each state is implemented with pseudo classes. */

/* Buttons may have icons on their left, right, be icon only or have no icon at all. These icons are placed both in the DOM via markup and with classes. */

.button {
  /* Basics */
  border-radius: 30px;
  border-width: 1px;
  transition-property: all;
  transition-duration: 250ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  padding-left: 20px;
  padding-right: 20px;
  padding-top: 10px;
  padding-bottom: 10px;
  font-size: 16px;
  line-height: 22px;
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(248 248 248 / var(--tw-bg-opacity, 1));
  color: #1E4557
  /* State variants */
}

.button:disabled {
  --tw-border-opacity: 1;
  border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(186 186 186 / var(--tw-bg-opacity, 1));
  color: #403F3F;
}

.button:hover {
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button:focus {
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(232 218 244 / var(--tw-bg-opacity, 1));
  color: #1E4557;
}

.button:focus-within {
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(232 218 244 / var(--tw-bg-opacity, 1));
  color: #1E4557;
}

.button:active {
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(232 218 244 / var(--tw-bg-opacity, 1));
  color: #1E4557;
}

.button:not(.button.is-action):not(.button.is-super).is-feedback {
    /* Action and super do not have a feedback state */
  }

.button:not(.button.is-action):not(.button.is-super).is-feedback {
    --tw-border-opacity: 1;
    border-color: rgb(42 113 63 / var(--tw-border-opacity, 1));
  }

.button:not(.button.is-action):not(.button.is-super).is-feedback {
    --tw-bg-opacity: 1;
    background-color: rgb(221 236 222 / var(--tw-bg-opacity, 1));
  }

.button:not(.button.is-action):not(.button.is-super).is-feedback {
    color: #2A713F;
  }

/* Size variant */

.button:not(.button.is-action):not(.button.is-super).is-sm {
    /* No sm version for action and super buttons */
  }

.button:not(.button.is-action):not(.button.is-super).is-sm {
    padding-left: 15px;
    padding-right: 15px;
  }

.button:not(.button.is-action):not(.button.is-super).is-sm {
    padding-top: 5px;
    padding-bottom: 5px;
  }

.button:not(.button.is-action):not(.button.is-super).is-sm {
    font-size: 12px;
    line-height: 18px;
  }

.button svg {
    flex-shrink: 0;
  }

.button svg {
    /* So any flexbox shenanigans don't resize the icon. */
  }

.button.is-strong {
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(30 69 87 / var(--tw-bg-opacity, 1));
  color: #ffffff;
  /* State variants */
}

.button.is-strong:disabled {
  --tw-border-opacity: 1;
  border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(186 186 186 / var(--tw-bg-opacity, 1));
  color: #403F3F;
}

.button.is-strong:hover {
  --tw-border-opacity: 1;
  border-color: rgb(20 108 139 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button.is-strong:focus {
  --tw-border-opacity: 1;
  border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button.is-strong:focus-within {
  --tw-border-opacity: 1;
  border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button.is-strong:active {
  --tw-border-opacity: 1;
  border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button.is-strong:not(.button.is-strong.is-action):not(.button.is-strong.is-super).is-feedback {
    /* Action and super do not have a feedback state */
  }

.button.is-strong:not(.button.is-strong.is-action):not(.button.is-strong.is-super).is-feedback {
    --tw-border-opacity: 1;
    border-color: rgb(50 131 74 / var(--tw-border-opacity, 1));
  }

.button.is-strong:not(.button.is-strong.is-action):not(.button.is-strong.is-super).is-feedback {
    --tw-bg-opacity: 1;
    background-color: rgb(50 131 74 / var(--tw-bg-opacity, 1));
  }

.button.is-strong:not(.button.is-strong.is-action):not(.button.is-strong.is-super).is-feedback {
    color: #ffffff;
  }

.button.is-strong.is-dark {
    --tw-border-opacity: 1;
    border-color: rgb(235 235 235 / var(--tw-border-opacity, 1));
  }

.button.is-strong.is-dark {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  }

.button.is-strong.is-dark {
    color: #1E4557;
  }

.button.is-strong.is-dark {
    /* State variants */
  }

.button.is-strong.is-dark:disabled {
    --tw-border-opacity: 1;
    border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
  }

.button.is-strong.is-dark:disabled {
    --tw-bg-opacity: 1;
    background-color: rgb(186 186 186 / var(--tw-bg-opacity, 1));
  }

.button.is-strong.is-dark:disabled {
    color: #403F3F;
  }

.button.is-strong.is-dark:hover {
    --tw-border-opacity: 1;
    border-color: rgb(235 235 235 / var(--tw-border-opacity, 1));
  }

.button.is-strong.is-dark:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(235 235 235 / var(--tw-bg-opacity, 1));
  }

.button.is-strong.is-dark:hover {
    color: #146C8B;
  }

.button.is-strong.is-dark:focus {
    --tw-border-opacity: 1;
    border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  }

.button.is-strong.is-dark:focus {
    --tw-bg-opacity: 1;
    background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  }

.button.is-strong.is-dark:focus {
    color: #ffffff;
  }

.button.is-strong.is-dark:focus-within {
    --tw-border-opacity: 1;
    border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  }

.button.is-strong.is-dark:focus-within {
    --tw-bg-opacity: 1;
    background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  }

.button.is-strong.is-dark:focus-within {
    color: #ffffff;
  }

.button.is-strong.is-dark:active {
    --tw-border-opacity: 1;
    border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  }

.button.is-strong.is-dark:active {
    --tw-bg-opacity: 1;
    background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  }

.button.is-strong.is-dark:active {
    color: #ffffff;
  }

.button.is-strong.is-dark:not(.button.is-strong.is-dark.is-action):not(.button.is-strong.is-dark.is-super).is-feedback {
      /* Action and super do not have a feedback state */
    }

.button.is-strong.is-dark:not(.button.is-strong.is-dark.is-action):not(.button.is-strong.is-dark.is-super).is-feedback {
      --tw-border-opacity: 1;
      border-color: rgb(50 131 74 / var(--tw-border-opacity, 1));
    }

.button.is-strong.is-dark:not(.button.is-strong.is-dark.is-action):not(.button.is-strong.is-dark.is-super).is-feedback {
      --tw-bg-opacity: 1;
      background-color: rgb(50 131 74 / var(--tw-bg-opacity, 1));
    }

.button.is-strong.is-dark:not(.button.is-strong.is-dark.is-action):not(.button.is-strong.is-dark.is-super).is-feedback {
      color: #ffffff;
    }

.button svg {
  height: 20px;
  width: 20px;
}

.button.is-action {
  /* Basics */
  border-radius: 20px;
  font-size: 14px;
  line-height: 20px;
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(248 248 248 / var(--tw-bg-opacity, 1));
  color: #1E4557
  /* State variants */
}

.button.is-action:disabled {
  --tw-border-opacity: 1;
  border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(186 186 186 / var(--tw-bg-opacity, 1));
  color: #403F3F;
}

.button.is-action:hover {
  --tw-border-opacity: 1;
  border-color: rgb(20 108 139 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button.is-action:focus {
  --tw-border-opacity: 1;
  border-color: rgb(20 108 139 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button.is-action:focus-within {
  --tw-border-opacity: 1;
  border-color: rgb(20 108 139 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button.is-action:active {
  --tw-border-opacity: 1;
  border-color: rgb(20 108 139 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button.is-action.has-icon {
    display: inline-flex;
  }

.button.is-action.has-icon {
    gap: 5px;
  }

.button.is-action.has-icon {
    padding-left: 5px;
  }

.button.is-action.has-icon {
    padding-right: 20px;
  }

.button.is-super {
  /* Basics */
  display: inline-flex;
  align-items: center;
  gap: 20px;
  border-radius: 40px;
  padding-top: 20px;
  padding-bottom: 20px;
  padding-left: 20px;
  padding-right: 40px;
  font-size: 16px;
  line-height: 22px;
  font-weight: 700;
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(248 248 248 / var(--tw-bg-opacity, 1));
  color: #1E4557
}

.button.is-super:disabled {
  --tw-border-opacity: 1;
  border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(186 186 186 / var(--tw-bg-opacity, 1));
  color: #403F3F;
}

.button.is-super:hover {
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
  color: #ffffff;
}

.button.is-super:focus {
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(232 218 244 / var(--tw-bg-opacity, 1));
  color: #1E4557;
}

.button.is-super:focus-within {
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(232 218 244 / var(--tw-bg-opacity, 1));
  color: #1E4557;
}

.button.is-super:active {
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(232 218 244 / var(--tw-bg-opacity, 1));
  color: #1E4557;
}

.button.is-super:not(.button.is-super.is-strong).is-dark {
    --tw-border-opacity: 1;
    border-color: rgb(235 235 235 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark {
    color: #1E4557;
  }

.button.is-super:not(.button.is-super.is-strong).is-dark {
    /* State variants */
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:disabled {
    --tw-border-opacity: 1;
    border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:disabled {
    --tw-bg-opacity: 1;
    background-color: rgb(186 186 186 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:disabled {
    color: #403F3F;
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:hover {
    --tw-border-opacity: 1;
    border-color: rgb(20 108 139 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:hover {
    color: #ffffff;
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:focus {
    --tw-border-opacity: 1;
    border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:focus {
    --tw-bg-opacity: 1;
    background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:focus {
    color: #ffffff;
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:focus-within {
    --tw-border-opacity: 1;
    border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:focus-within {
    --tw-bg-opacity: 1;
    background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:focus-within {
    color: #ffffff;
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:active {
    --tw-border-opacity: 1;
    border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:active {
    --tw-bg-opacity: 1;
    background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-strong).is-dark:active {
    color: #ffffff;
  }

.button.is-super:not(.button.is-super.is-dark).is-strong {
    --tw-border-opacity: 1;
    border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong {
    --tw-bg-opacity: 1;
    background-color: rgb(30 69 87 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong {
    color: #ffffff;
  }

.button.is-super:not(.button.is-super.is-dark).is-strong {
    /* State variants */
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:disabled {
    --tw-border-opacity: 1;
    border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:disabled {
    --tw-bg-opacity: 1;
    background-color: rgb(186 186 186 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:disabled {
    color: #403F3F;
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:hover {
    --tw-border-opacity: 1;
    border-color: rgb(20 108 139 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(20 108 139 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:hover {
    color: #ffffff;
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:focus {
    --tw-border-opacity: 1;
    border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:focus {
    --tw-bg-opacity: 1;
    background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:focus {
    color: #ffffff;
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:focus-within {
    --tw-border-opacity: 1;
    border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:focus-within {
    --tw-bg-opacity: 1;
    background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:focus-within {
    color: #ffffff;
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:active {
    --tw-border-opacity: 1;
    border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:active {
    --tw-bg-opacity: 1;
    background-color: rgb(145 86 180 / var(--tw-bg-opacity, 1));
  }

.button.is-super:not(.button.is-super.is-dark).is-strong:active {
    color: #ffffff;
  }

.button.is-super svg {
    height: 40px;
  }

.button.is-super svg {
    width: 40px;
  }

.button.is-super svg {
    border-radius: 9999px;
  }

.button.is-super svg {
    --tw-bg-opacity: 1;
    background-color: rgb(30 69 87 / var(--tw-bg-opacity, 1));
  }

.button.is-super svg {
    color: #ffffff;
  }

.button.is-super.is-strong svg {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  }

.button.is-super.is-strong svg {
    color: #1E4557;
  }

.button.is-super:disabled svg {
    --tw-bg-opacity: 1;
    background-color: rgb(64 63 63 / var(--tw-bg-opacity, 1));
  }

.button.is-super.is-strong:disabled svg {
    color: #403F3F;
  }

.button:not(.button.is-action):not(.button.is-super).has-icon {
    display: inline-flex;
  }

.button:not(.button.is-action):not(.button.is-super).has-icon {
    align-items: center;
  }

.button:not(.button.is-action):not(.button.is-super).has-icon {
    padding-left: 10px;
  }

.button:not(.button.is-action):not(.button.is-super).has-icon {
    padding-right: 20px;
  }

.button:not(.button.is-action):not(.button.is-super).has-icon svg {
      margin-right: 10px;
    }

.button:not(.button.is-action):not(.button.is-super).has-icon svg {
      background-color: transparent;
    }

.button:not(.button.is-action):not(.button.is-super).has-icon svg {
      color: inherit;
    }

.button:not(.button.is-action):not(.button.is-super).has-icon.is-sm {
      padding-left: 5px;
    }

.button:not(.button.is-action):not(.button.is-super).has-icon.is-sm {
      padding-right: 15px;
    }

.button:not(.button.is-action):not(.button.is-super).has-icon-right {
    display: inline-flex;
  }

.button:not(.button.is-action):not(.button.is-super).has-icon-right {
    align-items: center;
  }

.button:not(.button.is-action):not(.button.is-super).has-icon-right {
    padding-left: 20px;
  }

.button:not(.button.is-action):not(.button.is-super).has-icon-right {
    padding-right: 10px;
  }

.button:not(.button.is-action):not(.button.is-super).has-icon-right svg {
      margin-left: 10px;
    }

.button:not(.button.is-action):not(.button.is-super).has-icon-right.is-sm {
      padding-left: 15px;
    }

.button:not(.button.is-action):not(.button.is-super).has-icon-right.is-sm {
      padding-right: 5px;
    }

.button:not(.button.is-action):not(.button.is-super).is-icon-only {
    display: inline-flex;
  }

.button:not(.button.is-action):not(.button.is-super).is-icon-only {
    padding: 10px;
  }

.button:not(.button.is-action):not(.button.is-super).is-icon-only.is-sm {
      padding: 5px;
    }

.page-header {
  margin-left: auto;
  margin-right: auto;
  max-width: 560px;
  padding-left: 15px;
  padding-right: 15px;
}

@media (min-width: 768px) {
  .page-header {
    max-width: 768px;
    padding-left: 20px;
    padding-right: 20px;
  }
}

@media (min-width: 1024px) {
  .page-header {
    max-width: 836px;
  }
}

@media (min-width: 1210px) {
  .page-header {
    max-width: 1120px;
    padding-left: 40px;
    padding-right: 40px;
  }
}

.page-header {
  display: grid;
  align-items: center;
}

@media(min-width:1660px) {
  .page-header {
    max-width: 2560px;
  }
}

.page-header {
  height: var(--page-header-height);
  grid-template:
      'logo controls' 46px
      'console console' auto /
      1fr auto;
}

@media (min-width: 768px) {

.page-header {
    grid-template:
        'logo console controls' 1fr /
        1fr 1fr 1fr
}
  }

.page-header .page-header-console {
    grid-area: console;
  }

.page-header .page-header-console {
    display: flex;
  }

.page-header .page-header-console {
    align-items: center;
  }

.page-header .page-header-console {
    justify-content: center;
  }

.page-header .page-header-controls {
    display: grid;
  }

.page-header .page-header-controls {
    height: 30px;
  }

.page-header .page-header-controls {
    justify-content: flex-end;
  }

.page-header .page-header-controls {
    gap: 8px;
  }

.page-header .page-header-controls {
    grid-area: controls;
    /* If we do not set the grid area explicitly here, the controls move one to the left on Bettingen. */
    grid-template-columns: auto auto auto;
  }

.link {
  color: #1E4557;
}

.link:hover {
  color: #079BCA;
}

.link:visited:hover {
  color: #512E61;
}

.link:visited {
  color: #1E4557;
}

.link:active {
  color: #146C8B;
}

/* List margin fix for Box paragraph */

details figure > .table tbody {
    border-bottom-width: 0;
  }

details figure > .table:has(~ figcaption) tbody {
    border-bottom-width: 1px;
  }

.table {
  width: 100%;
}

.table th,
    .table td {
    padding: 10px;
  }

.table th,
    .table td {
    text-align: left;
  }

.table th,
    .table td {
    vertical-align: top;
  }

.table thead {
    border-bottom-width: 2px;
  }

.table thead {
    --tw-border-opacity: 1;
    border-bottom-color: rgb(0 0 0 / var(--tw-border-opacity, 1));
  }

.table thead {
    font-size: 12px;
    line-height: 18px;
  }

.table thead {
    color: var(--color-primary-500);
  }

.table thead th {
      padding-bottom: 5px;
    }

.table tbody {
    border-bottom-width: 1px;
  }

.table tbody td,
      .table tbody th {
      padding: 10px;
    }

.table td:first-child,
    .table th:first-child {
    padding-left: 0px;
  }

.table caption {
    margin-bottom: 10px;
  }

.table caption {
    text-align: left;
  }

.table caption {
    font-size: 20px;
    line-height: 28px;
  }

.table caption {
    font-weight: 700;
  }

.table a {
    border-bottom-width: 1px;
  }

.table a {
    --tw-border-opacity: 1;
    border-bottom-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
  }

.table a {
    color: #079BCA;
  }

.table a:hover {
    --tw-border-opacity: 1;
    border-bottom-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  }

.table a:hover {
    color: #1E4557;
  }

.table a:visited {
    border-bottom-color: rgb(145 86 180 );
  }

.table a:visited {
    color: #9156B4;
  }

.table a:active {
    color: #146C8B;
  }

@media screen and (max-width: 768px) {
    .table.has-mobile-style {
      border-top-width: 1px;
    }
  }

@media screen and (max-width: 768px) {
      .table.has-mobile-style thead {
        display: none;
      }
    }

@media screen and (max-width: 768px) {
      .table.has-mobile-style tbody th,
      .table.has-mobile-style tbody tr,
      .table.has-mobile-style tbody td {
        display: block;
      }
    }

@media screen and (max-width: 768px) {
      .table.has-mobile-style td,
      .table.has-mobile-style th {
        padding-left: 0px;
        padding-right: 0px;
      }
    }

@media screen and (max-width: 768px) {
      .table.has-mobile-style tbody tr {
        border-top-width: 1px;
      }
    }

@media screen and (max-width: 768px) {
      .table.has-mobile-style td[data-head-label]:before {
        margin-bottom: 10px;
      }
    }

@media screen and (max-width: 768px) {
      .table.has-mobile-style td[data-head-label]:before {
        display: block;
      }
    }

@media screen and (max-width: 768px) {
      .table.has-mobile-style td[data-head-label]:before {
        font-size: 12px;
        line-height: 18px;
      }
    }

@media screen and (max-width: 768px) {
      .table.has-mobile-style td[data-head-label]:before {
        font-weight: 700;
      }
    }

@media screen and (max-width: 768px) {
      .table.has-mobile-style td[data-head-label]:before {
        color: #2A9749;
      }
    }

@media screen and (max-width: 768px) {
      .table.has-mobile-style td[data-head-label]:before {
        --tw-content: attr(data-head-label);
        content: var(--tw-content);
      }
    }

.table.has-mobile-style td p:not(:last-child) {
        margin-bottom: 10px;
      }

figure > .table ~ figcaption {
  margin-top: 5px;
  font-style: italic;
}

:root {
  --wiggle-degrees: 13deg;
}

@keyframes wiggle {
  0% {
    transform: rotate(0deg);
  }

  20% {
    transform: rotate(var(--wiggle-degrees));
  }

  40% {
    transform: rotate(calc(-1 * var(--wiggle-degrees)));
  }

  60% {
    transform: rotate(var(--wiggle-degrees));
  }

  80% {
    transform: rotate(calc(-1 * var(--wiggle-degrees)));
  }

  100% {
    transform: rotate(0deg);
  }
}

@keyframes jump {
  0% {
    transform: translateY(0) scale(1, 1);
  }

  50% {
    transform: translateY(-6px) scale(0.8, 1.2);
  }

  100% {
    transform: translateY(0) scale(1, 1);
  }
}

svg[data-symbol="arrow-east"],
  svg[data-symbol="arrow-north-east"],
  svg[data-symbol="arrow-west"],
  svg[data-symbol="arrow-south"],
  svg[data-symbol="play"],
  svg[data-symbol="send-mail"] {
  transition-property: transform;
  transition-duration: 250ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

a:hover svg[data-symbol="arrow-east"], button:hover svg[data-symbol="arrow-east"], .button:hover svg[data-symbol="arrow-east"], .link:hover svg[data-symbol="arrow-east"] {
    transform: translateX(4px);
  }

a:hover svg[data-symbol="send-mail"], button:hover svg[data-symbol="send-mail"], .button:hover svg[data-symbol="send-mail"], .link:hover svg[data-symbol="send-mail"] {
    transform: translateX(3px);
  }

a:hover svg[data-symbol="arrow-north-east"], button:hover svg[data-symbol="arrow-north-east"], .button:hover svg[data-symbol="arrow-north-east"], .link:hover svg[data-symbol="arrow-north-east"] {
    transform: translate(1.5px, -1.5px);
  }

a:hover svg[data-symbol="arrow-west"], button:hover svg[data-symbol="arrow-west"], .button:hover svg[data-symbol="arrow-west"], .link:hover svg[data-symbol="arrow-west"] {
    transform: translateX(-4px);
  }

a:hover svg[data-symbol="arrow-south"], button:hover svg[data-symbol="arrow-south"], .button:hover svg[data-symbol="arrow-south"], .link:hover svg[data-symbol="arrow-south"] {
    transform: translateY(2px);
  }

a:hover svg[data-symbol="play"], button:hover svg[data-symbol="play"], .button:hover svg[data-symbol="play"], .link:hover svg[data-symbol="play"] {
    transform: scale(1.1);
  }

a:hover svg[data-symbol="phone"], button:hover svg[data-symbol="phone"], .button:hover svg[data-symbol="phone"], .link:hover svg[data-symbol="phone"] {
    animation: wiggle .4s linear;
  }

a:hover svg[data-symbol="location"], button:hover svg[data-symbol="location"], .button:hover svg[data-symbol="location"], .link:hover svg[data-symbol="location"] {
    animation: jump .5s cubic-bezier(0, 0, 0.58, 1.0);
  }

a:active svg[data-symbol="arrow-east"], button:active svg[data-symbol="arrow-east"], .button:active svg[data-symbol="arrow-east"], .link:active svg[data-symbol="arrow-east"] {
    transform: translateX(8px);
  }

a:active svg[data-symbol="arrow-north-east"], button:active svg[data-symbol="arrow-north-east"], .button:active svg[data-symbol="arrow-north-east"], .link:active svg[data-symbol="arrow-north-east"] {
    transform: translate(2px, -2px);
  }

a:active svg[data-symbol="arrow-west"], button:active svg[data-symbol="arrow-west"], .button:active svg[data-symbol="arrow-west"], .link:active svg[data-symbol="arrow-west"] {
    transform: translateX(-8px);
  }

a:active svg[data-symbol="arrow-south"], button:active svg[data-symbol="arrow-south"], .button:active svg[data-symbol="arrow-south"], .link:active svg[data-symbol="arrow-south"] {
    transform: translateY(3px);
  }

.input {
  cursor: pointer;
  border-radius: 4px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(30 69 87 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
  padding: 10px;
  font-size: 16px;
  line-height: 22px;
  color: #333333;
  transition-property: all;
  transition-duration: 250ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.input:hover {
  --tw-border-opacity: 1;
  border-color: rgb(7 155 202 / var(--tw-border-opacity, 1));
}

.input:focus {
  --tw-border-opacity: 1;
  border-color: rgb(145 86 180 / var(--tw-border-opacity, 1));
  --tw-shadow: 0 0 10px 0 #9156B4;
  --tw-shadow-colored: 0 0 10px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: #9156B4;
  --tw-shadow: var(--tw-shadow-colored);
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.input:disabled {
  cursor: default;
  --tw-border-opacity: 1;
  border-color: rgb(186 186 186 / var(--tw-border-opacity, 1));
  --tw-bg-opacity: 1;
  background-color: rgb(186 186 186 / var(--tw-bg-opacity, 1));
  color: #403F3F;
}

.input::-moz-placeholder {
    color: #949494;
  }

.input::placeholder {
    color: #949494;
  }

.input:disabled::-moz-placeholder {
    color: #403F3F;
  }

.input:disabled::placeholder {
    color: #403F3F;
  }

.\!container {
  margin-left: auto;
  margin-right: auto;
  max-width: 560px;
  padding-left: 15px;
  padding-right: 15px;
}

@media (min-width: 768px) {
  .\!container {
    max-width: 768px;
    padding-left: 20px;
    padding-right: 20px;
  }
}

@media (min-width: 1024px) {
  .\!container {
    max-width: 836px;
  }
}

@media (min-width: 1210px) {
  .\!container {
    max-width: 1120px;
    padding-left: 40px;
    padding-right: 40px;
  }
}

.container {
  margin-left: auto;
  margin-right: auto;
  max-width: 560px;
  padding-left: 15px;
  padding-right: 15px;
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
    padding-left: 20px;
    padding-right: 20px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 836px;
  }
}

@media (min-width: 1210px) {
  .container {
    max-width: 1120px;
    padding-left: 40px;
    padding-right: 40px;
  }
}

.indikatoren-pagination > nav > ul {
  display: flex;
}

.indikatoren-pagination > nav > ul > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(2px * var(--tw-space-x-reverse));
  margin-left: calc(2px * calc(1 - var(--tw-space-x-reverse)));
}

.indikatoren-pagination > nav > ul {
  overflow: hidden;
}

.indikatoren-pagination > nav > .pagination > .active {
  background-color: var(--color-primary-100);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  inset: 0px;
}

.right-\[20px\] {
  right: 20px;
}

.top-0 {
  top: 0px;
}

.top-1\/2 {
  top: 50%;
}

.z-10 {
  z-index: 10;
}

.z-50 {
  z-index: 50;
}

.z-\[200\] {
  z-index: 200;
}

.col-span-4 {
  grid-column: span 4 / span 4;
}

.m-\[4px\] {
  margin: 4px;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mb-10 {
  margin-bottom: 10px;
}

.mb-15 {
  margin-bottom: 15px;
}

.mb-20 {
  margin-bottom: 20px;
}

.mb-40 {
  margin-bottom: 40px;
}

.mb-5 {
  margin-bottom: 5px;
}

.ml-\[0\.3em\] {
  margin-left: 0.3em;
}

.mt-10 {
  margin-top: 10px;
}

.mt-20 {
  margin-top: 20px;
}

.mt-30 {
  margin-top: 30px;
}

.mt-\[-22px\] {
  margin-top: -22px;
}

.mt-\[0\.18em\] {
  margin-top: 0.18em;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.h-0 {
  height: 0px;
}

.h-3 {
  height: 3px;
}

.h-\[1\.2083em\] {
  height: 1.2083em;
}

.h-\[1\.7em\] {
  height: 1.7em;
}

.h-\[20px\] {
  height: 20px;
}

.h-\[25px\] {
  height: 25px;
}

.h-\[50px\] {
  height: 50px;
}

.h-\[60px\] {
  height: 60px;
}

.max-h-\[90vh\] {
  max-height: 90vh;
}

.min-h-\[60vh\] {
  min-height: 60vh;
}

.w-1\/2 {
  width: 50%;
}

.w-3 {
  width: 3px;
}

.w-\[1em\] {
  width: 1em;
}

.w-full {
  width: 100%;
}

.max-w-\[2560px\] {
  max-width: 2560px;
}

.max-w-\[600px\] {
  max-width: 600px;
}

.max-w-\[83\.333333\%\] {
  max-width: 83.333333%;
}

.basis-2\/3 {
  flex-basis: 66.666667%;
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-10 {
  gap: 10px;
}

.gap-x-20 {
  -moz-column-gap: 20px;
       column-gap: 20px;
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(2px * var(--tw-space-x-reverse));
  margin-left: calc(2px * calc(1 - var(--tw-space-x-reverse)));
}

.overflow-hidden {
  overflow: hidden;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded-\[30px\] {
  border-radius: 30px;
}

.rounded-full {
  border-radius: 9999px;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-l {
  border-left-width: 1px;
}

.border-gray-900 {
  --tw-border-opacity: 1;
  border-color: rgb(51 51 51 / var(--tw-border-opacity, 1));
}

.border-b-gray-400 {
  --tw-border-opacity: 1;
  border-bottom-color: rgb(165 165 165 / var(--tw-border-opacity, 1));
}

.bg-\[\#DDECDE\]\/80 {
  background-color: rgb(221 236 222 / 0.8);
}

.bg-gray-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(148 148 148 / var(--tw-bg-opacity, 1));
}

.bg-primary-100 {
  background-color: var(--color-primary-100);
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.p-10 {
  padding: 10px;
}

.p-20 {
  padding: 20px;
}

.px-15 {
  padding-left: 15px;
  padding-right: 15px;
}

.pb-\[20px\] {
  padding-bottom: 20px;
}

.pl-20 {
  padding-left: 20px;
}

.pl-\[0\.25em\] {
  padding-left: 0.25em;
}

.pt-30 {
  padding-top: 30px;
}

.pb-20 {
  padding-bottom: 20px;
}

.pr-20 {
  padding-right: 20px;
}

.pb-25 {
  padding-bottom: 25px;
}

.pr-25 {
  padding-right: 25px;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-4xl {
  font-size: 36px;
  line-height: 40px;
}

.text-\[0\.59em\] {
  font-size: 0.59em;
}

.text-sm {
  font-size: 14px;
  line-height: 20px;
}

.text-xl {
  font-size: 20px;
  line-height: 28px;
}

.font-bold {
  font-weight: 700;
}

.leading-\[1\.2em\] {
  line-height: 1.2em;
}

.leading-none {
  line-height: 1;
}

.text-gray-600 {
  color: #777777;
}

.text-white {
  color: #ffffff;
}

.underline {
  text-decoration-line: underline;
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-250 {
  transition-duration: 250ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.will-change-transform {
  will-change: transform;
}

@font-face {
  font-family: "Inter";

  src: url(/assets/fonts/Inter-Regular.woff2) format("woff2"),
    url(/assets/fonts/Inter-Regular.woff) format("woff");

  font-weight: 400;

  font-style: normal;
}

@font-face {
  font-family: "Inter";

  src: url(/assets/fonts/Inter-Medium.woff2) format("woff2"),
    url(/assets/fonts/Inter-Medium.woff) format("woff");

  font-weight: 500;

  font-style: normal;
}

@font-face {
  font-family: "Inter";

  src: url(/assets/fonts/Inter-Bold.woff2) format("woff2"),
    url(/assets/fonts/Inter-Bold.woff) format("woff");

  font-weight: 700;

  font-style: normal;
}

body {
  font-family: Inter, Helvetica Neue, Helvetica, Arial, sans-serif;
}

.focus-within\:border-purple-500:focus-within {
  --tw-border-opacity: 1;
  border-color: rgb(165 108 201 / var(--tw-border-opacity, 1));
}

.focus-within\:shadow-purple-600:focus-within {
  --tw-shadow: 0 0 10px 0 #9156B4;
  --tw-shadow-colored: 0 0 10px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: #9156B4;
  --tw-shadow: var(--tw-shadow-colored);
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

@media (min-width: 768px) {
  .md\:mt-40 {
    margin-top: 40px;
  }

  .md\:mt-\[-400px\] {
    margin-top: -400px;
  }

  .md\:grid-cols-\[2fr_1fr_1fr_1fr\] {
    grid-template-columns: 2fr 1fr 1fr 1fr;
  }

  .md\:items-center {
    align-items: center;
  }

  .md\:px-20 {
    padding-left: 20px;
    padding-right: 20px;
  }
}

@media (min-width: 1024px) {
  .lg\:w-1\/4 {
    width: 25%;
  }

  .lg\:w-3\/5 {
    width: 60%;
  }

  .lg\:px-25 {
    padding-left: 25px;
    padding-right: 25px;
  }

  .lg\:text-lg {
    font-size: 18px;
    line-height: 24px;
  }

  .lg\:text-sm {
    font-size: 14px;
    line-height: 20px;
  }
}

@media (min-width: 1210px) {
  .xl\:px-40 {
    padding-left: 40px;
    padding-right: 40px;
  }

  .xl\:pr-140 {
    padding-right: 140px;
  }

  .xl\:text-2xl {
    font-size: 24px;
    line-height: 32px;
  }

  .xl\:text-xl {
    font-size: 20px;
    line-height: 28px;
  }
}

@media print {
  .print\:\!text-xl {
    font-size: 20px !important;
    line-height: 28px !important;
  }
}
